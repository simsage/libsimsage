/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * A session object, A session's id is the \"session-id\" used throughout the SimSage API.
 *
 * @param id the session-id, a guid
 * @param userId the user associated with this session, their id, a guid
 * @param organisationId the main organisation (its guid id) this session is associated with if applicable (administrators do not have such an association)
 * @param email email address of this user
 * @param ipAddress the ip-address of the user logging in if captured
 * @param lastAccess a unix-timestamp of the last time this session was accessed/refreshed
 * @param role the main/highest role of the user signed-in
 * @param sessionType the type of sign-in (Anonymous (i.e. valid but search only) or SimSage)
 */


data class CMSession (

    /* the session-id, a guid */
    @Json(name = "id")
    val id: kotlin.String,

    /* the user associated with this session, their id, a guid */
    @Json(name = "userId")
    val userId: kotlin.String,

    /* the main organisation (its guid id) this session is associated with if applicable (administrators do not have such an association) */
    @Json(name = "organisationId")
    val organisationId: kotlin.String,

    /* email address of this user */
    @Json(name = "email")
    val email: kotlin.String,

    /* the ip-address of the user logging in if captured */
    @Json(name = "ipAddress")
    val ipAddress: kotlin.String,

    /* a unix-timestamp of the last time this session was accessed/refreshed */
    @Json(name = "lastAccess")
    val lastAccess: kotlin.Long,

    /* the main/highest role of the user signed-in */
    @Json(name = "role")
    val role: kotlin.String,

    /* the type of sign-in (Anonymous (i.e. valid but search only) or SimSage) */
    @Json(name = "sessionType")
    val sessionType: kotlin.String

)

