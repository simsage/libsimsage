/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.CMDocument
import org.openapitools.client.models.CMDocumentAcl

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * A document folder content item.
 *
 * @param sourceId the source-id of the owner of this folder
 * @param url The unique URL of a document or folder.
 * @param parentFolderId The id of the parent folder of this folder.
 * @param folderId The id of this folder.
 * @param urlId the internal SimSage id for this url
 * @param folderName the display name of the folder
 * @param itemType the type of folder (crawlerType for sources)
 * @param folderList the folder items in this folder
 * @param fileList the files in this folder
 * @param acls the security permissions for this item
 */


data class CMDocumentFolder (

    /* the source-id of the owner of this folder */
    @Json(name = "sourceId")
    val sourceId: kotlin.Int,

    /* The unique URL of a document or folder. */
    @Json(name = "url")
    val url: kotlin.String,

    /* The id of the parent folder of this folder. */
    @Json(name = "parentFolderId")
    val parentFolderId: kotlin.String,

    /* The id of this folder. */
    @Json(name = "folderId")
    val folderId: kotlin.String,

    /* the internal SimSage id for this url */
    @Json(name = "urlId")
    val urlId: kotlin.Int,

    /* the display name of the folder */
    @Json(name = "folderName")
    val folderName: kotlin.String,

    /* the type of folder (crawlerType for sources) */
    @Json(name = "itemType")
    val itemType: kotlin.String,

    /* the folder items in this folder */
    @Json(name = "folderList")
    val folderList: kotlin.collections.List<CMDocumentFolder>,

    /* the files in this folder */
    @Json(name = "fileList")
    val fileList: kotlin.collections.List<CMDocument>,

    /* the security permissions for this item */
    @Json(name = "acls")
    val acls: kotlin.collections.List<CMDocumentAcl>

)

