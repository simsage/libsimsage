/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.CMRedaction

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param organisationId 
 * @param kbId 
 * @param projectId 
 * @param url 
 * @param redactions 
 * @param documentStatus 
 * @param documentAction 
 * @param annotated 
 * @param createForExport 
 * @param exportNativeFormat 
 */


data class CMRedactionData (

    @Json(name = "organisationId")
    val organisationId: kotlin.String,

    @Json(name = "kbId")
    val kbId: kotlin.String,

    @Json(name = "projectId")
    val projectId: kotlin.String,

    @Json(name = "url")
    val url: kotlin.String,

    @Json(name = "redactions")
    val redactions: kotlin.collections.List<CMRedaction>,

    @Json(name = "documentStatus")
    val documentStatus: CMRedactionData.DocumentStatus,

    @Json(name = "documentAction")
    val documentAction: CMRedactionData.DocumentAction,

    @Json(name = "annotated")
    val annotated: kotlin.Boolean,

    @Json(name = "createForExport")
    val createForExport: kotlin.Boolean,

    @Json(name = "exportNativeFormat")
    val exportNativeFormat: kotlin.Boolean

) {

    /**
     * 
     *
     * Values: nEW,iNPROGRESS,cOMPLETED
     */
    @JsonClass(generateAdapter = false)
    enum class DocumentStatus(val value: kotlin.String) {
        @Json(name = "NEW") nEW("NEW"),
        @Json(name = "IN_PROGRESS") iNPROGRESS("IN_PROGRESS"),
        @Json(name = "COMPLETED") cOMPLETED("COMPLETED");
    }
    /**
     * 
     *
     * Values: nONE,rEDACT,iGNORE,dELETE
     */
    @JsonClass(generateAdapter = false)
    enum class DocumentAction(val value: kotlin.String) {
        @Json(name = "NONE") nONE("NONE"),
        @Json(name = "REDACT") rEDACT("REDACT"),
        @Json(name = "IGNORE") iGNORE("IGNORE"),
        @Json(name = "DELETE") dELETE("DELETE");
    }
}

