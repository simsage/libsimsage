/*
 * SimSage REST API
 * SimSage REST API
 *
 * The version of the OpenAPI document: 7.14.12
 * Contact: info@simsage.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CMClientQuery
 */
public class CMClientQueryTest {
    private final CMClientQuery model = new CMClientQuery();

    /**
     * Model tests for CMClientQuery
     */
    @Test
    public void testCMClientQuery() {
        // TODO: test CMClientQuery
    }

    /**
     * Test the property 'organisationId'
     */
    @Test
    public void organisationIdTest() {
        // TODO: test organisationId
    }

    /**
     * Test the property 'kbList'
     */
    @Test
    public void kbListTest() {
        // TODO: test kbList
    }

    /**
     * Test the property 'clientId'
     */
    @Test
    public void clientIdTest() {
        // TODO: test clientId
    }

    /**
     * Test the property 'semanticSearch'
     */
    @Test
    public void semanticSearchTest() {
        // TODO: test semanticSearch
    }

    /**
     * Test the property 'qnaQuery'
     */
    @Test
    public void qnaQueryTest() {
        // TODO: test qnaQuery
    }

    /**
     * Test the property 'query'
     */
    @Test
    public void queryTest() {
        // TODO: test query
    }

    /**
     * Test the property 'filter'
     */
    @Test
    public void filterTest() {
        // TODO: test filter
    }

    /**
     * Test the property 'numResults'
     */
    @Test
    public void numResultsTest() {
        // TODO: test numResults
    }

    /**
     * Test the property 'scoreThreshold'
     */
    @Test
    public void scoreThresholdTest() {
        // TODO: test scoreThreshold
    }

    /**
     * Test the property 'page'
     */
    @Test
    public void pageTest() {
        // TODO: test page
    }

    /**
     * Test the property 'pageSize'
     */
    @Test
    public void pageSizeTest() {
        // TODO: test pageSize
    }

    /**
     * Test the property 'fragmentCount'
     */
    @Test
    public void fragmentCountTest() {
        // TODO: test fragmentCount
    }

    /**
     * Test the property 'maxWordDistance'
     */
    @Test
    public void maxWordDistanceTest() {
        // TODO: test maxWordDistance
    }

    /**
     * Test the property 'sourceId'
     */
    @Test
    public void sourceIdTest() {
        // TODO: test sourceId
    }

    /**
     * Test the property 'shardSizeList'
     */
    @Test
    public void shardSizeListTest() {
        // TODO: test shardSizeList
    }

    /**
     * Test the property 'spellingSuggest'
     */
    @Test
    public void spellingSuggestTest() {
        // TODO: test spellingSuggest
    }

    /**
     * Test the property 'groupSimilarDocuments'
     */
    @Test
    public void groupSimilarDocumentsTest() {
        // TODO: test groupSimilarDocuments
    }

    /**
     * Test the property 'sortByAge'
     */
    @Test
    public void sortByAgeTest() {
        // TODO: test sortByAge
    }

    /**
     * Test the property 'useQuestionAnsweringAi'
     */
    @Test
    public void useQuestionAnsweringAiTest() {
        // TODO: test useQuestionAnsweringAi
    }

    /**
     * Test the property 'wordSynSet'
     */
    @Test
    public void wordSynSetTest() {
        // TODO: test wordSynSet
    }

}
