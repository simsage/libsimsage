/*
 * SimSage REST API
 *
 * SimSage REST API
 *
 * The version of the OpenAPI document: 7.12.19
 * Contact: info@simsage.co.uk
 * Generated by: https://openapi-generator.tech
 */

/// CmDocument : A document is the main data carrying entity in SimSage.  A document can literally be a document like a pdf file found on a file-server, or a database-record, or something captured from a remote system like a web-page, or an image on a web-page.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CmDocument {
    /// the organisation (its guid id)
    #[serde(rename = "organisationId")]
    pub organisation_id: String,
    /// the knowledge-base id (its guid id)
    #[serde(rename = "kbId")]
    pub kb_id: String,
    /// A unique URL for this document.
    #[serde(rename = "url")]
    pub url: String,
    /// A unique URL-id for this document.
    #[serde(rename = "urlId")]
    pub url_id: i32,
    /// Where the document was sourced from (for external documents).
    #[serde(rename = "origin")]
    pub origin: String,
    /// The title of this document, can be empty.
    #[serde(rename = "title")]
    pub title: String,
    /// The author of this document, can be empty.
    #[serde(rename = "author")]
    pub author: String,
    /// The file extension of this document, its type.
    #[serde(rename = "documentType")]
    pub document_type: String,
    /// a unix-timestamp for the creation date-time of this document
    #[serde(rename = "created")]
    pub created: i64,
    /// a unix-timestamp for the upload date-time of this document to SimSage
    #[serde(rename = "uploaded")]
    pub uploaded: i64,
    /// a unix-timestamp for the last-modified date-time of this document
    #[serde(rename = "lastModified")]
    pub last_modified: i64,
    /// a unix-timestamp for when a SimSage crawler last looked at this document
    #[serde(rename = "crawled")]
    pub crawled: i64,
    /// a unix-timestamp for when a SimSage converter last looked at this document
    #[serde(rename = "converted")]
    pub converted: i64,
    /// a unix-timestamp for when a SimSage parser last looked at this document
    #[serde(rename = "parsed")]
    pub parsed: i64,
    /// a unix-timestamp for when a SimSage indexer last looked at this document
    #[serde(rename = "indexed")]
    pub indexed: i64,
    /// a unix-timestamp for when a SimSage image-converter last looked at this document
    #[serde(rename = "previewed")]
    pub previewed: i64,
    /// A unique hash-string identifying SimSage changes to this document.  SimSage uses the value to see if the content has changed since last.
    #[serde(rename = "changeHash")]
    pub change_hash: String,
    /// A unique hash-string identifying the content of this document.  SimSage uses this value to find exact duplicates.
    #[serde(rename = "contentHash")]
    pub content_hash: String,
    /// the source-id of this crawler (ie. the crawler's id)
    #[serde(rename = "sourceId")]
    pub source_id: i32,
    /// a related url if there is parentage to be considered for an item
    #[serde(rename = "parentUrl")]
    pub parent_url: String,
    /// a list of the exact ACLs applying to this document (can be empty)
    #[serde(rename = "acls")]
    pub acls: Vec<crate::models::CmDocumentAcl>,
    /// a series of name values for other metadata values found in the container of this document
    #[serde(rename = "metadata")]
    pub metadata: ::std::collections::HashMap<String, String>,
    /// the number of sentences in this document.
    #[serde(rename = "numSentences")]
    pub num_sentences: i32,
    /// the total number of words in this document.
    #[serde(rename = "numWords")]
    pub num_words: i32,
    /// the total number of relationships in this document.
    #[serde(rename = "numRelationships")]
    pub num_relationships: i32,
    /// the size of the original document's binary in bytes.
    #[serde(rename = "binarySize")]
    pub binary_size: i64,
    /// the size of the converted document's text in bytes.
    #[serde(rename = "textSize")]
    pub text_size: i32,
    /// list of binary versions of this document
    #[serde(rename = "versionList")]
    pub version_list: Vec<crate::models::CmDocumentVersion>,
    /// list of checkout notes about this document
    #[serde(rename = "noteList")]
    pub note_list: Vec<crate::models::CmDocumentNote>,
    /// list of activities for the last two months of this document
    #[serde(rename = "activityList")]
    pub activity_list: Vec<crate::models::CmDocumentAudit>,
    /// a description of the type of this document
    #[serde(rename = "typeDescription")]
    pub type_description: String,
    /// the filename of this document in the DMS system
    #[serde(rename = "filename")]
    pub filename: String,
    /// the folderId of this item in the DMS system
    #[serde(rename = "folderId")]
    pub folder_id: String,
}

impl CmDocument {
    /// A document is the main data carrying entity in SimSage.  A document can literally be a document like a pdf file found on a file-server, or a database-record, or something captured from a remote system like a web-page, or an image on a web-page.
    pub fn new(organisation_id: String, kb_id: String, url: String, url_id: i32, origin: String, title: String, author: String, document_type: String, created: i64, uploaded: i64, last_modified: i64, crawled: i64, converted: i64, parsed: i64, indexed: i64, previewed: i64, change_hash: String, content_hash: String, source_id: i32, parent_url: String, acls: Vec<crate::models::CmDocumentAcl>, metadata: ::std::collections::HashMap<String, String>, num_sentences: i32, num_words: i32, num_relationships: i32, binary_size: i64, text_size: i32, version_list: Vec<crate::models::CmDocumentVersion>, note_list: Vec<crate::models::CmDocumentNote>, activity_list: Vec<crate::models::CmDocumentAudit>, type_description: String, filename: String, folder_id: String) -> CmDocument {
        CmDocument {
            organisation_id,
            kb_id,
            url,
            url_id,
            origin,
            title,
            author,
            document_type,
            created,
            uploaded,
            last_modified,
            crawled,
            converted,
            parsed,
            indexed,
            previewed,
            change_hash,
            content_hash,
            source_id,
            parent_url,
            acls,
            metadata,
            num_sentences,
            num_words,
            num_relationships,
            binary_size,
            text_size,
            version_list,
            note_list,
            activity_list,
            type_description,
            filename,
            folder_id,
        }
    }
}


