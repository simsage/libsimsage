/*
 * SimSage REST API
 *
 * SimSage REST API
 *
 * The version of the OpenAPI document: 7.14.12
 * Contact: info@simsage.co.uk
 * Generated by: https://openapi-generator.tech
 */

/// CmKnowledgeBase : A knowledge-base is SimSage's representation of a list of information silos belonging to an organisation.  A knowledge-base represents a second level of isolation between data in SimSage.  The first level is an Organisation.  Each organisation in SimSage has a list of knowledge-bases, strictly isolated from each other.  Each knowledge-base in turn can have many sources (information collectors that add items to a knowledge-base like a file-crawler, or a web-crawler)



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CmKnowledgeBase {
    /// the main organisation (its guid id)
    #[serde(rename = "organisationId")]
    pub organisation_id: String,
    /// the knowledge-base id (its guid id)
    #[serde(rename = "kbId")]
    pub kb_id: String,
    /// the name of this knowledge-base (must be unique within an organisation)
    #[serde(rename = "name")]
    pub name: String,
    /// the support email of the person to email with any UI generated questions
    #[serde(rename = "email")]
    pub email: String,
    /// the security id (a guid) of this knowledge-base.  This is a shared secret between SimSage and external systems.
    #[serde(rename = "securityId")]
    pub security_id: String,
    /// when this knowledge-base was created, a unix date-time long
    #[serde(rename = "created")]
    pub created: i64,
    /// limit the number of queries per day (if greater than 0).  A value of zero (0) indicates no limits.
    #[serde(rename = "maxQueriesPerDay")]
    pub max_queries_per_day: i64,
    /// How long to keep analytics for in months.  A value of zero (0) indicates forever
    #[serde(rename = "analyticsWindowInMonths")]
    pub analytics_window_in_months: i32,
    /// a flag signalling this knowledge-base is active (can be used).  An inactive knowledge-base cannot be queried.
    #[serde(rename = "enabled")]
    pub enabled: bool,
    /// a flag signalling this knowledge-base has operator support.  A value of false prevents this knowledge-base's operator from interacting with end-users.
    #[serde(rename = "operatorEnabled")]
    pub operator_enabled: bool,
    /// All queries are given a 10% grace when daily-limits (maxQueriesPerDay) are enforced.  If this flag is true, the owner of this knowledge-base (email) is sent a warning at 100% daily utiliziation.
    #[serde(rename = "capacityWarnings")]
    pub capacity_warnings: bool,
    /// the time-schedule for index-optimization, when active.
    #[serde(rename = "indexSchedule")]
    pub index_schedule: String,
    /// the last time this triggered and ran as a unix date-time (read only)
    #[serde(rename = "lastIndexOptimizationTime")]
    pub last_index_optimization_time: i64,
    /// is the index optimizer active?
    #[serde(rename = "isOptimizing")]
    pub is_optimizing: bool,
    /// how far along is the optimizer if it is active (0% to 100%)
    #[serde(rename = "optimizationProgress")]
    pub optimization_progress: i32,
    #[serde(rename = "optimizing", skip_serializing_if = "Option::is_none")]
    pub optimizing: Option<bool>,
}

impl CmKnowledgeBase {
    /// A knowledge-base is SimSage's representation of a list of information silos belonging to an organisation.  A knowledge-base represents a second level of isolation between data in SimSage.  The first level is an Organisation.  Each organisation in SimSage has a list of knowledge-bases, strictly isolated from each other.  Each knowledge-base in turn can have many sources (information collectors that add items to a knowledge-base like a file-crawler, or a web-crawler)
    pub fn new(organisation_id: String, kb_id: String, name: String, email: String, security_id: String, created: i64, max_queries_per_day: i64, analytics_window_in_months: i32, enabled: bool, operator_enabled: bool, capacity_warnings: bool, index_schedule: String, last_index_optimization_time: i64, is_optimizing: bool, optimization_progress: i32) -> CmKnowledgeBase {
        CmKnowledgeBase {
            organisation_id,
            kb_id,
            name,
            email,
            security_id,
            created,
            max_queries_per_day,
            analytics_window_in_months,
            enabled,
            operator_enabled,
            capacity_warnings,
            index_schedule,
            last_index_optimization_time,
            is_optimizing,
            optimization_progress,
            optimizing: None,
        }
    }
}


