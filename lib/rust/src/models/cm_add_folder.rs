/*
 * SimSage REST API
 *
 * SimSage REST API
 *
 * The version of the OpenAPI document: 7.13.31
 * Contact: info@simsage.co.uk
 * Generated by: https://openapi-generator.tech
 */

/// CmAddFolder : the folder add object



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CmAddFolder {
    /// the main organisation (its guid id) for this source/crawler
    #[serde(rename = "organisationId")]
    pub organisation_id: String,
    /// the knowledge-base id of this context item, a guid-string
    #[serde(rename = "kbId")]
    pub kb_id: String,
    /// the source-id of the owner of the url
    #[serde(rename = "sourceId")]
    pub source_id: i32,
    /// the id of the folder.
    #[serde(rename = "folderId")]
    pub folder_id: String,
    /// the folder's new name.
    #[serde(rename = "folderName")]
    pub folder_name: String,
    /// pagination, the previous last URL for the page-set (null is first page)
    #[serde(rename = "prevUrl", skip_serializing_if = "Option::is_none")]
    pub prev_url: Option<String>,
    /// page-size for a paginated set
    #[serde(rename = "pageSize")]
    pub page_size: i32,
}

impl CmAddFolder {
    /// the folder add object
    pub fn new(organisation_id: String, kb_id: String, source_id: i32, folder_id: String, folder_name: String, page_size: i32) -> CmAddFolder {
        CmAddFolder {
            organisation_id,
            kb_id,
            source_id,
            folder_id,
            folder_name,
            prev_url: None,
            page_size,
        }
    }
}


