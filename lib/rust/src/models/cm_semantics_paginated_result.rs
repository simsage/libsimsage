/*
 * SimSage REST API
 *
 * SimSage REST API
 *
 * The version of the OpenAPI document: 7.12.19
 * Contact: info@simsage.co.uk
 * Generated by: https://openapi-generator.tech
 */

/// CmSemanticsPaginatedResult : A paginated semantics return list matching a request for the same.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CmSemanticsPaginatedResult {
    /// the organisation (its guid id).
    #[serde(rename = "organisationId")]
    pub organisation_id: String,
    /// the knowledge-base (its guid id).
    #[serde(rename = "kbId")]
    pub kb_id: String,
    /// The filter that was used to find these items.
    #[serde(rename = "filter")]
    pub filter: String,
    /// the resulting list of semantics (return)
    #[serde(rename = "semanticList")]
    pub semantic_list: Vec<crate::models::CmSemantic>,
    /// the total number of semantics that matched.
    #[serde(rename = "numSemantics")]
    pub num_semantics: i32,
}

impl CmSemanticsPaginatedResult {
    /// A paginated semantics return list matching a request for the same.
    pub fn new(organisation_id: String, kb_id: String, filter: String, semantic_list: Vec<crate::models::CmSemantic>, num_semantics: i32) -> CmSemanticsPaginatedResult {
        CmSemanticsPaginatedResult {
            organisation_id,
            kb_id,
            filter,
            semantic_list,
            num_semantics,
        }
    }
}


