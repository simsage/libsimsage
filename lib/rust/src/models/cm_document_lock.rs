/*
 * SimSage REST API
 *
 * SimSage REST API
 *
 * The version of the OpenAPI document: 7.12.19
 * Contact: info@simsage.co.uk
 * Generated by: https://openapi-generator.tech
 */

/// CmDocumentLock : the document checkout request



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CmDocumentLock {
    /// the main organisation (its guid id) for this source/crawler
    #[serde(rename = "organisationId")]
    pub organisation_id: String,
    /// the knowledge-base id of this context item, a guid-string
    #[serde(rename = "kbId")]
    pub kb_id: String,
    /// The unique URL of a document.
    #[serde(rename = "url")]
    pub url: String,
    /// the internal SimSage id for this url
    #[serde(rename = "urlId")]
    pub url_id: i32,
    /// the source-id of the owner of the url
    #[serde(rename = "sourceId")]
    pub source_id: i32,
    /// the user's id, a guid
    #[serde(rename = "userId")]
    pub user_id: String,
    /// the name of the checkout folder/file object
    #[serde(rename = "name")]
    pub name: String,
    /// a unix-timestamp for the creation of this checkout object
    #[serde(rename = "checkoutDate")]
    pub checkout_date: i64,
}

impl CmDocumentLock {
    /// the document checkout request
    pub fn new(organisation_id: String, kb_id: String, url: String, url_id: i32, source_id: i32, user_id: String, name: String, checkout_date: i64) -> CmDocumentLock {
        CmDocumentLock {
            organisation_id,
            kb_id,
            url,
            url_id,
            source_id,
            user_id,
            name,
            checkout_date,
        }
    }
}


