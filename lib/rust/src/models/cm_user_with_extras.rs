/*
 * SimSage REST API
 *
 * SimSage REST API
 *
 * The version of the OpenAPI document: 7.13.31
 * Contact: info@simsage.co.uk
 * Generated by: https://openapi-generator.tech
 */

/// CmUserWithExtras : An object used for updating a SimSage user.  This object can be used to update the user's password too.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CmUserWithExtras {
    /// the user's id (its guid id).
    #[serde(rename = "id")]
    pub id: String,
    /// the email of this user
    #[serde(rename = "email")]
    pub email: String,
    /// a password for this user (or blank if not to be changed)
    #[serde(rename = "password")]
    pub password: String,
    /// the first-name of this user
    #[serde(rename = "firstName")]
    pub first_name: String,
    /// the last-name (surname) of this user
    #[serde(rename = "surname")]
    pub surname: String,
    /// the roles to be associated with this user
    #[serde(rename = "roles")]
    pub roles: String,
    /// the operator-id and knowledge-base id to be associated with this user.  This user is to be an operator if set.
    #[serde(rename = "operatorKBList")]
    pub operator_kb_list: String,
    /// a list of groups this user is part of (can be empty)
    #[serde(rename = "groupList")]
    pub group_list: Vec<crate::models::CmGroup>,
    /// an optional set of csv separated name1=value1,name2=value2 for JWT matching
    #[serde(rename = "jwtMatchNameValueCSV")]
    pub jwt_match_name_value_csv: String,
}

impl CmUserWithExtras {
    /// An object used for updating a SimSage user.  This object can be used to update the user's password too.
    pub fn new(id: String, email: String, password: String, first_name: String, surname: String, roles: String, operator_kb_list: String, group_list: Vec<crate::models::CmGroup>, jwt_match_name_value_csv: String) -> CmUserWithExtras {
        CmUserWithExtras {
            id,
            email,
            password,
            first_name,
            surname,
            roles,
            operator_kb_list,
            group_list,
            jwt_match_name_value_csv,
        }
    }
}


