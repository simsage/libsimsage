/*
 * SimSage REST API
 *
 * SimSage REST API
 *
 * The version of the OpenAPI document: 7.13.31
 * Contact: info@simsage.co.uk
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CmProjectInfo {
    #[serde(rename = "key")]
    pub key: String,
    #[serde(rename = "caption")]
    pub caption: String,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "search")]
    pub search: Box<crate::models::CmSearchDefinition>,
    #[serde(rename = "steps")]
    pub steps: Vec<crate::models::CmStepConfig>,
    #[serde(rename = "sliceActions")]
    pub slice_actions: ::std::collections::HashMap<String, String>,
    #[serde(rename = "screenConfigs")]
    pub screen_configs: ::std::collections::HashMap<String, ::std::collections::HashMap<String, serde_json::Value>>,
}

impl CmProjectInfo {
    pub fn new(key: String, caption: String, description: String, search: crate::models::CmSearchDefinition, steps: Vec<crate::models::CmStepConfig>, slice_actions: ::std::collections::HashMap<String, String>, screen_configs: ::std::collections::HashMap<String, ::std::collections::HashMap<String, serde_json::Value>>) -> CmProjectInfo {
        CmProjectInfo {
            key,
            caption,
            description,
            search: Box::new(search),
            steps,
            slice_actions,
            screen_configs,
        }
    }
}


