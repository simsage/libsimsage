/*
 * SimSage REST API
 *
 * SimSage REST API
 *
 * The version of the OpenAPI document: 7.14.12
 * Contact: info@simsage.co.uk
 * Generated by: https://openapi-generator.tech
 */

/// CmDeleteDocument : An external document delete object.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CmDeleteDocument {
    /// the organisation (its guid id) this document is to be deleted for.
    #[serde(rename = "organisationId")]
    pub organisation_id: String,
    /// the knowledge-base (its guid id) this document is to be deleted for.
    #[serde(rename = "kbId")]
    pub kb_id: String,
    /// the security-id (a guid) of the knowledge-base.  This is effectively the shared secret between SimSage and the external-crawler system.
    #[serde(rename = "sid")]
    pub sid: String,
    /// the source-id of this crawler (ie. the crawler's id) this document belongs to.
    #[serde(rename = "sourceId")]
    pub source_id: i32,
    /// A unique URL for this document.
    #[serde(rename = "url")]
    pub url: String,
    /// Do we need to add transport encryption
    #[serde(rename = "encrypted")]
    pub encrypted: bool,
    /// The seed used if encrypted
    #[serde(rename = "seed")]
    pub seed: i32,
}

impl CmDeleteDocument {
    /// An external document delete object.
    pub fn new(organisation_id: String, kb_id: String, sid: String, source_id: i32, url: String, encrypted: bool, seed: i32) -> CmDeleteDocument {
        CmDeleteDocument {
            organisation_id,
            kb_id,
            sid,
            source_id,
            url,
            encrypted,
            seed,
        }
    }
}


