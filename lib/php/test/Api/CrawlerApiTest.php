<?php
/**
 * CrawlerApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * SimSage REST API
 *
 * SimSage REST API
 *
 * The version of the OpenAPI document: 7.11.4
 * Contact: info@simsage.co.uk
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * CrawlerApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class CrawlerApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for crawlerExternalDocumentDelete
     *
     * Remove an External Document.
     *
     */
    public function testCrawlerExternalDocumentDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for crawlerExternalDocumentUnChanged
     *
     * Mark External Document Unchanged.
     *
     */
    public function testCrawlerExternalDocumentUnChanged()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for crawlerExternalDocumentUpload
     *
     * Upload External Document.
     *
     */
    public function testCrawlerExternalDocumentUpload()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for crawlerExternalImageUpload
     *
     * Upload External Image.
     *
     */
    public function testCrawlerExternalImageUpload()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for delete
     *
     * Delete source.
     *
     */
    public function testDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteDocuments
     *
     * Delete source's documents.
     *
     */
    public function testDeleteDocuments()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for encryptedCommunications
     *
     * Secure Communication.
     *
     */
    public function testEncryptedCommunications()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for externalCrawler
     *
     * External Crawler.
     *
     */
    public function testExternalCrawler()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for externalCrawlerFinished
     *
     * Stop External Crawler.
     *
     */
    public function testExternalCrawlerFinished()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for externalCrawlerStart
     *
     * Start External Crawler.
     *
     */
    public function testExternalCrawlerStart()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCrawler
     *
     * Get source.
     *
     */
    public function testGetCrawler()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSourceList
     *
     * Get source List.
     *
     */
    public function testGetSourceList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for oidcCode
     *
     * OIDC code receiver.
     *
     */
    public function testOidcCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for processAllFiles
     *
     * Process all files of crawler/source.
     *
     */
    public function testProcessAllFiles()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for resetSourceDelta
     *
     * Reset Source delta-token.
     *
     */
    public function testResetSourceDelta()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for startCrawler
     *
     * Start crawler.
     *
     */
    public function testStartCrawler()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for testCrawler
     *
     * Test Crawler.
     *
     */
    public function testTestCrawler()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateCrawler
     *
     * Update Source.
     *
     */
    public function testUpdateCrawler()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for version6
     *
     * Version.
     *
     */
    public function testVersion6()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
