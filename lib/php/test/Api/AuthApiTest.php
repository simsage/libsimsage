<?php
/**
 * AuthApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * SimSage REST API
 *
 * SimSage REST API
 *
 * The version of the OpenAPI document: 7.11.4
 * Contact: info@simsage.co.uk
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * AuthApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class AuthApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for deleteGroup
     *
     * Delete Group.
     *
     */
    public function testDeleteGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteOrganisation
     *
     * Delete Organisation.
     *
     */
    public function testDeleteOrganisation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getGroups
     *
     * Get Groups.
     *
     */
    public function testGetGroups()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOTT
     *
     * Get a one-time token..
     *
     */
    public function testGetOTT()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getUserOrganisationList
     *
     * Get a list of Organisations.
     *
     */
    public function testGetUserOrganisationList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getUsersPaginated
     *
     * Get Users paginated.
     *
     */
    public function testGetUsersPaginated()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for importUsersAndGroups
     *
     * .
     *
     */
    public function testImportUsersAndGroups()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for myRoles
     *
     * Get users application roles.
     *
     */
    public function testMyRoles()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeUserFromOrganisation
     *
     * Remove User from Organisation.
     *
     */
    public function testRemoveUserFromOrganisation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for resetPassword
     *
     * Perform a password-reset request..
     *
     */
    public function testResetPassword()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for resetPasswordRequest
     *
     * Password Reset Request.
     *
     */
    public function testResetPasswordRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for saveGroup
     *
     * Save Group.
     *
     */
    public function testSaveGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for signIn
     *
     * Sign In.
     *
     */
    public function testSignIn()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for signInAdminUsingJWTMsal
     *
     * JWT MSal Sign In.
     *
     */
    public function testSignInAdminUsingJWTMsal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for signInDmsUsingJWTMsal
     *
     * JWT MSal Sign In.
     *
     */
    public function testSignInDmsUsingJWTMsal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for signInEvolveUsingJWTMsal
     *
     * JWT MSal Sign In.
     *
     */
    public function testSignInEvolveUsingJWTMsal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for signInSearchUsingJWTMsal
     *
     * JWT MSal Sign In.
     *
     */
    public function testSignInSearchUsingJWTMsal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for signOut
     *
     * Sign Out.
     *
     */
    public function testSignOut()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateOrganisation
     *
     * Save Organisation.
     *
     */
    public function testUpdateOrganisation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateUser
     *
     * .
     *
     */
    public function testUpdateUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for version8
     *
     * Get Version.
     *
     */
    public function testVersion8()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
