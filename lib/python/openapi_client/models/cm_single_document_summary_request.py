# coding: utf-8

"""
    SimSage REST API

    SimSage REST API

    The version of the OpenAPI document: 7.12.19
    Contact: info@simsage.co.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json



from pydantic import BaseModel, Field, StrictInt, StrictStr

class CMSingleDocumentSummaryRequest(BaseModel):
    """
    a document summarization object.  # noqa: E501
    """
    organisation_id: StrictStr = Field(..., alias="organisationId", description="the organisation (its guid id)")
    kb_id: StrictStr = Field(..., alias="kbId", description="the knowledge-base id (its guid id)")
    url: StrictStr = Field(..., description="the url of the document to summarize")
    top: StrictInt = Field(..., description="the top-n sentences to return for the summary of the documents")
    __properties = ["organisationId", "kbId", "url", "top"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> CMSingleDocumentSummaryRequest:
        """Create an instance of CMSingleDocumentSummaryRequest from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> CMSingleDocumentSummaryRequest:
        """Create an instance of CMSingleDocumentSummaryRequest from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return CMSingleDocumentSummaryRequest.parse_obj(obj)

        _obj = CMSingleDocumentSummaryRequest.parse_obj({
            "organisation_id": obj.get("organisationId"),
            "kb_id": obj.get("kbId"),
            "url": obj.get("url"),
            "top": obj.get("top")
        })
        return _obj


