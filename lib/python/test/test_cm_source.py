# coding: utf-8

"""
    SimSage REST API

    SimSage REST API

    The version of the OpenAPI document: 7.14.12
    Contact: info@simsage.co.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.cm_source import CMSource  # noqa: E501

class TestCMSource(unittest.TestCase):
    """CMSource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CMSource:
        """Test CMSource
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CMSource`
        """
        model = CMSource()  # noqa: E501
        if include_optional:
            return CMSource(
                source_id = 1,
                organisation_id = '',
                kb_id = '',
                weight = 1.0,
                node_id = 0,
                name = 'web crawler',
                crawler_type = 'one of "rss","external","web","discourse","file","database","onedrive","exchange365","sharepoint365","imanage","box","dropbox","wordpress","gdrive","nfs","restfull"',
                schedule = 'eg. If we want this crawler to be active every Monday from midnight to 1am, and Tuesday from 5pm to 6pm (GMT), we'd use: "mon-00,tue-17"',
                delete_files = True,
                allow_anonymous = False,
                processing_level = 'one of: CONVERT, PARSE, INDEX',
                enable_preview = True,
                files_per_second = 0.0,
                specific_json = '{}',
                session_id = '',
                max_items = 0,
                max_bot_items = 0,
                custom_render = False,
                edge_device_id = '',
                num_results = 56,
                num_fragments = 56,
                num_errors = 56,
                error_threshold = 56,
                start_time = 56,
                end_time = 56,
                acls = [
                    openapi_client.models.cm_document_acl.CMDocumentAcl(
                        acl = 'e.g. "example@simsage.co.uk" or "domain users"', 
                        access = 'RW', 
                        is_user = True, 
                        user = True, )
                    ],
                is_crawling = False,
                num_crawled_documents = 0,
                num_converted_documents = 0,
                num_parsed_documents = 0,
                num_indexed_documents = 0,
                num_finished_documents = 0,
                num_errored_documents = 0,
                num_total_documents = 0,
                num_total_errored_documents = 0,
                use_default_relationships = True,
                is_busy = True,
                store_binary = True,
                versioned = True,
                write_to_cassandra = True,
                processor_config = '{}',
                enable_document_similarity = True,
                document_similarity_threshold = 0.9,
                is_external = False,
                use_ocr = True,
                use_stt = True,
                delta_indicator = '12345',
                transmit_external_logs = False,
                source_error = openapi_client.models.cm_source_error.CMSourceError(
                    message = 'something went wrong', 
                    created = 131231211, ),
                external = True,
                crawling = True,
                busy = True
            )
        else:
            return CMSource(
                source_id = 1,
                organisation_id = '',
                kb_id = '',
                weight = 1.0,
                node_id = 0,
                name = 'web crawler',
                crawler_type = 'one of "rss","external","web","discourse","file","database","onedrive","exchange365","sharepoint365","imanage","box","dropbox","wordpress","gdrive","nfs","restfull"',
                schedule = 'eg. If we want this crawler to be active every Monday from midnight to 1am, and Tuesday from 5pm to 6pm (GMT), we'd use: "mon-00,tue-17"',
                delete_files = True,
                allow_anonymous = False,
                processing_level = 'one of: CONVERT, PARSE, INDEX',
                enable_preview = True,
                files_per_second = 0.0,
                specific_json = '{}',
                session_id = '',
                max_items = 0,
                max_bot_items = 0,
                custom_render = False,
                edge_device_id = '',
                num_results = 56,
                num_fragments = 56,
                num_errors = 56,
                error_threshold = 56,
                start_time = 56,
                end_time = 56,
                acls = [
                    openapi_client.models.cm_document_acl.CMDocumentAcl(
                        acl = 'e.g. "example@simsage.co.uk" or "domain users"', 
                        access = 'RW', 
                        is_user = True, 
                        user = True, )
                    ],
                is_crawling = False,
                num_crawled_documents = 0,
                num_converted_documents = 0,
                num_parsed_documents = 0,
                num_indexed_documents = 0,
                num_finished_documents = 0,
                num_errored_documents = 0,
                num_total_documents = 0,
                num_total_errored_documents = 0,
                use_default_relationships = True,
                is_busy = True,
                store_binary = True,
                versioned = True,
                write_to_cassandra = True,
                processor_config = '{}',
                enable_document_similarity = True,
                document_similarity_threshold = 0.9,
                is_external = False,
                use_ocr = True,
                use_stt = True,
                delta_indicator = '12345',
                transmit_external_logs = False,
                source_error = openapi_client.models.cm_source_error.CMSourceError(
                    message = 'something went wrong', 
                    created = 131231211, ),
        )
        """

    def testCMSource(self):
        """Test CMSource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
