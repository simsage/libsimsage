# coding: utf-8

"""
    SimSage REST API

    SimSage REST API

    The version of the OpenAPI document: 7.14.12
    Contact: info@simsage.co.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.cm_upload_document import CMUploadDocument  # noqa: E501

class TestCMUploadDocument(unittest.TestCase):
    """CMUploadDocument unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CMUploadDocument:
        """Test CMUploadDocument
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CMUploadDocument`
        """
        model = CMUploadDocument()  # noqa: E501
        if include_optional:
            return CMUploadDocument(
                object_type = 'CMUploadDocument',
                organisation_id = '',
                kb_id = '',
                sid = '',
                source_id = 1,
                url = 'document-1',
                mime_type = 'text/plain',
                puid = 'fmt/123',
                acls = 'users:RW,administrator:RWD',
                title = 'My little pony.',
                author = 'John Manyberries',
                change_hash = '098f6bcd4621d373cade4e832627b4f6',
                content_hash = '118f6bcd4621d373cade4e832627b4cc',
                data = '',
                binary_size = 56,
                text = '',
                created = 56,
                last_modified = 56,
                metadata = {"file-extension":"txt"},
                categories = [
                    openapi_client.models.md_metadata_mapping.MDMetadataMapping(
                        data_type = 'one of: string, long', 
                        display = 'The price of the item', 
                        ext_metadata = 'a name', 
                        metadata = 'price', 
                        string_value_list = 'pants,shorts', 
                        number_value_list = '1.0', )
                    ],
                size = 41231,
                template = '<div classname="db-record">My little Pony.</div>',
                encrypted = True,
                seed = 0,
                run_id = 56
            )
        else:
            return CMUploadDocument(
                object_type = 'CMUploadDocument',
                organisation_id = '',
                kb_id = '',
                sid = '',
                source_id = 1,
                url = 'document-1',
                mime_type = 'text/plain',
                puid = 'fmt/123',
                acls = 'users:RW,administrator:RWD',
                title = 'My little pony.',
                author = 'John Manyberries',
                change_hash = '098f6bcd4621d373cade4e832627b4f6',
                content_hash = '118f6bcd4621d373cade4e832627b4cc',
                data = '',
                binary_size = 56,
                text = '',
                created = 56,
                last_modified = 56,
                metadata = {"file-extension":"txt"},
                categories = [
                    openapi_client.models.md_metadata_mapping.MDMetadataMapping(
                        data_type = 'one of: string, long', 
                        display = 'The price of the item', 
                        ext_metadata = 'a name', 
                        metadata = 'price', 
                        string_value_list = 'pants,shorts', 
                        number_value_list = '1.0', )
                    ],
                size = 41231,
                template = '<div classname="db-record">My little Pony.</div>',
                encrypted = True,
                seed = 0,
                run_id = 56,
        )
        """

    def testCMUploadDocument(self):
        """Test CMUploadDocument"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
