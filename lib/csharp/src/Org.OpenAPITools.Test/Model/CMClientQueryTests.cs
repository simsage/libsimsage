/*
 * SimSage REST API
 *
 * SimSage REST API
 *
 * The version of the OpenAPI document: 7.12.19
 * Contact: info@simsage.co.uk
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing CMClientQuery
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CMClientQueryTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CMClientQuery
        //private CMClientQuery instance;

        public CMClientQueryTests()
        {
            // TODO uncomment below to create an instance of CMClientQuery
            //instance = new CMClientQuery();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CMClientQuery
        /// </summary>
        [Fact]
        public void CMClientQueryInstanceTest()
        {
            // TODO uncomment below to test "IsType" CMClientQuery
            //Assert.IsType<CMClientQuery>(instance);
        }

        /// <summary>
        /// Test the property 'OrganisationId'
        /// </summary>
        [Fact]
        public void OrganisationIdTest()
        {
            // TODO unit test for the property 'OrganisationId'
        }

        /// <summary>
        /// Test the property 'KbList'
        /// </summary>
        [Fact]
        public void KbListTest()
        {
            // TODO unit test for the property 'KbList'
        }

        /// <summary>
        /// Test the property 'ClientId'
        /// </summary>
        [Fact]
        public void ClientIdTest()
        {
            // TODO unit test for the property 'ClientId'
        }

        /// <summary>
        /// Test the property 'SemanticSearch'
        /// </summary>
        [Fact]
        public void SemanticSearchTest()
        {
            // TODO unit test for the property 'SemanticSearch'
        }

        /// <summary>
        /// Test the property 'QnaQuery'
        /// </summary>
        [Fact]
        public void QnaQueryTest()
        {
            // TODO unit test for the property 'QnaQuery'
        }

        /// <summary>
        /// Test the property 'Query'
        /// </summary>
        [Fact]
        public void QueryTest()
        {
            // TODO unit test for the property 'Query'
        }

        /// <summary>
        /// Test the property 'Filter'
        /// </summary>
        [Fact]
        public void FilterTest()
        {
            // TODO unit test for the property 'Filter'
        }

        /// <summary>
        /// Test the property 'NumResults'
        /// </summary>
        [Fact]
        public void NumResultsTest()
        {
            // TODO unit test for the property 'NumResults'
        }

        /// <summary>
        /// Test the property 'ScoreThreshold'
        /// </summary>
        [Fact]
        public void ScoreThresholdTest()
        {
            // TODO unit test for the property 'ScoreThreshold'
        }

        /// <summary>
        /// Test the property 'Page'
        /// </summary>
        [Fact]
        public void PageTest()
        {
            // TODO unit test for the property 'Page'
        }

        /// <summary>
        /// Test the property 'PageSize'
        /// </summary>
        [Fact]
        public void PageSizeTest()
        {
            // TODO unit test for the property 'PageSize'
        }

        /// <summary>
        /// Test the property 'FragmentCount'
        /// </summary>
        [Fact]
        public void FragmentCountTest()
        {
            // TODO unit test for the property 'FragmentCount'
        }

        /// <summary>
        /// Test the property 'MaxWordDistance'
        /// </summary>
        [Fact]
        public void MaxWordDistanceTest()
        {
            // TODO unit test for the property 'MaxWordDistance'
        }

        /// <summary>
        /// Test the property 'SourceId'
        /// </summary>
        [Fact]
        public void SourceIdTest()
        {
            // TODO unit test for the property 'SourceId'
        }

        /// <summary>
        /// Test the property 'ShardSizeList'
        /// </summary>
        [Fact]
        public void ShardSizeListTest()
        {
            // TODO unit test for the property 'ShardSizeList'
        }

        /// <summary>
        /// Test the property 'SpellingSuggest'
        /// </summary>
        [Fact]
        public void SpellingSuggestTest()
        {
            // TODO unit test for the property 'SpellingSuggest'
        }

        /// <summary>
        /// Test the property 'GroupSimilarDocuments'
        /// </summary>
        [Fact]
        public void GroupSimilarDocumentsTest()
        {
            // TODO unit test for the property 'GroupSimilarDocuments'
        }

        /// <summary>
        /// Test the property 'SortByAge'
        /// </summary>
        [Fact]
        public void SortByAgeTest()
        {
            // TODO unit test for the property 'SortByAge'
        }

        /// <summary>
        /// Test the property 'UseQuestionAnsweringAi'
        /// </summary>
        [Fact]
        public void UseQuestionAnsweringAiTest()
        {
            // TODO unit test for the property 'UseQuestionAnsweringAi'
        }
    }
}
