/*
 * SimSage REST API
 *
 * SimSage REST API
 *
 * The version of the OpenAPI document: 7.12.19
 * Contact: info@simsage.co.uk
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing StatsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class StatsApiTests : IDisposable
    {
        private StatsApi instance;

        public StatsApiTests()
        {
            instance = new StatsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of StatsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' StatsApi
            //Assert.IsType<StatsApi>(instance);
        }

        /// <summary>
        /// Test GetIndexOptimizationReport
        /// </summary>
        [Fact]
        public void GetIndexOptimizationReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sessionId = null;
            //string organisationId = null;
            //string kbId = null;
            //long id = null;
            //var response = instance.GetIndexOptimizationReport(sessionId, organisationId, kbId, id);
            //Assert.IsType<List<OptimizeIndexesGetReportCmd>>(response);
        }

        /// <summary>
        /// Test GetIndexOptimizationReports
        /// </summary>
        [Fact]
        public void GetIndexOptimizationReportsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sessionId = null;
            //string organisationId = null;
            //string kbId = null;
            //var response = instance.GetIndexOptimizationReports(sessionId, organisationId, kbId);
            //Assert.IsType<List<OptimizeIndexesGetReportsCmd>>(response);
        }

        /// <summary>
        /// Test GetStats
        /// </summary>
        [Fact]
        public void GetStatsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sessionId = null;
            //string organisationId = null;
            //string kbId = null;
            //int year = null;
            //int month = null;
            //int top = null;
            //string? aPIVersion = null;
            //var response = instance.GetStats(sessionId, organisationId, kbId, year, month, top, aPIVersion);
            //Assert.IsType<CMReturnStatistics>(response);
        }

        /// <summary>
        /// Test SimSageStatus
        /// </summary>
        [Fact]
        public void SimSageStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sessionId = null;
            //string organisationId = null;
            //var response = instance.SimSageStatus(sessionId, organisationId);
            //Assert.IsType<List<CMCommandQueueItem>>(response);
        }

        /// <summary>
        /// Test SystemLogs
        /// </summary>
        [Fact]
        public void SystemLogsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organisationId = null;
            //int year = null;
            //int month = null;
            //int day = null;
            //int hour = null;
            //int hours = null;
            //string sessionId = null;
            //var response = instance.SystemLogs(organisationId, year, month, day, hour, hours, sessionId);
            //Assert.IsType<List<CMLoggerEntry>>(response);
        }

        /// <summary>
        /// Test Version
        /// </summary>
        [Fact]
        public void VersionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.Version();
            //Assert.IsType<CMVersion>(response);
        }
    }
}
