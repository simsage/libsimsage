/*
 * SimSage REST API
 *
 * SimSage REST API
 *
 * The version of the OpenAPI document: 7.13.31
 * Contact: info@simsage.co.uk
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// GdprProject
    /// </summary>
    [DataContract(Name = "GdprProject")]
    public partial class GdprProject : IEquatable<GdprProject>, IValidatableObject
    {
        /// <summary>
        /// Defines ProjectType
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ProjectTypeEnum
        {
            /// <summary>
            /// Enum FREESTYLE for value: FREESTYLE
            /// </summary>
            [EnumMember(Value = "FREESTYLE")]
            FREESTYLE = 1,

            /// <summary>
            /// Enum RIGHTTOBEFORGOTTENREQUEST for value: RIGHT_TO_BE_FORGOTTEN_REQUEST
            /// </summary>
            [EnumMember(Value = "RIGHT_TO_BE_FORGOTTEN_REQUEST")]
            RIGHTTOBEFORGOTTENREQUEST = 2,

            /// <summary>
            /// Enum DATAACCESSREQUEST for value: DATA_ACCESS_REQUEST
            /// </summary>
            [EnumMember(Value = "DATA_ACCESS_REQUEST")]
            DATAACCESSREQUEST = 3
        }


        /// <summary>
        /// Gets or Sets ProjectType
        /// </summary>
        [DataMember(Name = "projectType", IsRequired = true, EmitDefaultValue = true)]
        public ProjectTypeEnum ProjectType { get; set; }
        /// <summary>
        /// Defines Status
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum StatusEnum
        {
            /// <summary>
            /// Enum NEW for value: NEW
            /// </summary>
            [EnumMember(Value = "NEW")]
            NEW = 1,

            /// <summary>
            /// Enum INPROGRESS for value: IN_PROGRESS
            /// </summary>
            [EnumMember(Value = "IN_PROGRESS")]
            INPROGRESS = 2,

            /// <summary>
            /// Enum COMPLETED for value: COMPLETED
            /// </summary>
            [EnumMember(Value = "COMPLETED")]
            COMPLETED = 3
        }


        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", IsRequired = true, EmitDefaultValue = true)]
        public StatusEnum Status { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="GdprProject" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GdprProject() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GdprProject" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="createdBy">createdBy (required).</param>
        /// <param name="lastModifiedBy">lastModifiedBy (required).</param>
        /// <param name="created">created (required).</param>
        /// <param name="lastModified">lastModified (required).</param>
        /// <param name="lastResultUpdate">lastResultUpdate.</param>
        /// <param name="projectType">projectType (required).</param>
        /// <param name="status">status (required).</param>
        /// <param name="searchDetails">searchDetails (required).</param>
        public GdprProject(string id = default(string), string createdBy = default(string), string lastModifiedBy = default(string), DateTime created = default(DateTime), DateTime lastModified = default(DateTime), DateTime lastResultUpdate = default(DateTime), ProjectTypeEnum projectType = default(ProjectTypeEnum), StatusEnum status = default(StatusEnum), CMGdprSearchDetails searchDetails = default(CMGdprSearchDetails))
        {
            // to ensure "createdBy" is required (not null)
            if (createdBy == null)
            {
                throw new ArgumentNullException("createdBy is a required property for GdprProject and cannot be null");
            }
            this.CreatedBy = createdBy;
            // to ensure "lastModifiedBy" is required (not null)
            if (lastModifiedBy == null)
            {
                throw new ArgumentNullException("lastModifiedBy is a required property for GdprProject and cannot be null");
            }
            this.LastModifiedBy = lastModifiedBy;
            this.Created = created;
            this.LastModified = lastModified;
            this.ProjectType = projectType;
            this.Status = status;
            // to ensure "searchDetails" is required (not null)
            if (searchDetails == null)
            {
                throw new ArgumentNullException("searchDetails is a required property for GdprProject and cannot be null");
            }
            this.SearchDetails = searchDetails;
            this.Id = id;
            this.LastResultUpdate = lastResultUpdate;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets CreatedBy
        /// </summary>
        [DataMember(Name = "createdBy", IsRequired = true, EmitDefaultValue = true)]
        public string CreatedBy { get; set; }

        /// <summary>
        /// Gets or Sets LastModifiedBy
        /// </summary>
        [DataMember(Name = "lastModifiedBy", IsRequired = true, EmitDefaultValue = true)]
        public string LastModifiedBy { get; set; }

        /// <summary>
        /// Gets or Sets Created
        /// </summary>
        [DataMember(Name = "created", IsRequired = true, EmitDefaultValue = true)]
        public DateTime Created { get; set; }

        /// <summary>
        /// Gets or Sets LastModified
        /// </summary>
        [DataMember(Name = "lastModified", IsRequired = true, EmitDefaultValue = true)]
        public DateTime LastModified { get; set; }

        /// <summary>
        /// Gets or Sets LastResultUpdate
        /// </summary>
        [DataMember(Name = "lastResultUpdate", EmitDefaultValue = false)]
        public DateTime LastResultUpdate { get; set; }

        /// <summary>
        /// Gets or Sets SearchDetails
        /// </summary>
        [DataMember(Name = "searchDetails", IsRequired = true, EmitDefaultValue = true)]
        public CMGdprSearchDetails SearchDetails { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GdprProject {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  CreatedBy: ").Append(CreatedBy).Append("\n");
            sb.Append("  LastModifiedBy: ").Append(LastModifiedBy).Append("\n");
            sb.Append("  Created: ").Append(Created).Append("\n");
            sb.Append("  LastModified: ").Append(LastModified).Append("\n");
            sb.Append("  LastResultUpdate: ").Append(LastResultUpdate).Append("\n");
            sb.Append("  ProjectType: ").Append(ProjectType).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  SearchDetails: ").Append(SearchDetails).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GdprProject);
        }

        /// <summary>
        /// Returns true if GdprProject instances are equal
        /// </summary>
        /// <param name="input">Instance of GdprProject to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GdprProject input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.CreatedBy == input.CreatedBy ||
                    (this.CreatedBy != null &&
                    this.CreatedBy.Equals(input.CreatedBy))
                ) && 
                (
                    this.LastModifiedBy == input.LastModifiedBy ||
                    (this.LastModifiedBy != null &&
                    this.LastModifiedBy.Equals(input.LastModifiedBy))
                ) && 
                (
                    this.Created == input.Created ||
                    (this.Created != null &&
                    this.Created.Equals(input.Created))
                ) && 
                (
                    this.LastModified == input.LastModified ||
                    (this.LastModified != null &&
                    this.LastModified.Equals(input.LastModified))
                ) && 
                (
                    this.LastResultUpdate == input.LastResultUpdate ||
                    (this.LastResultUpdate != null &&
                    this.LastResultUpdate.Equals(input.LastResultUpdate))
                ) && 
                (
                    this.ProjectType == input.ProjectType ||
                    this.ProjectType.Equals(input.ProjectType)
                ) && 
                (
                    this.Status == input.Status ||
                    this.Status.Equals(input.Status)
                ) && 
                (
                    this.SearchDetails == input.SearchDetails ||
                    (this.SearchDetails != null &&
                    this.SearchDetails.Equals(input.SearchDetails))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                {
                    hashCode = (hashCode * 59) + this.Id.GetHashCode();
                }
                if (this.CreatedBy != null)
                {
                    hashCode = (hashCode * 59) + this.CreatedBy.GetHashCode();
                }
                if (this.LastModifiedBy != null)
                {
                    hashCode = (hashCode * 59) + this.LastModifiedBy.GetHashCode();
                }
                if (this.Created != null)
                {
                    hashCode = (hashCode * 59) + this.Created.GetHashCode();
                }
                if (this.LastModified != null)
                {
                    hashCode = (hashCode * 59) + this.LastModified.GetHashCode();
                }
                if (this.LastResultUpdate != null)
                {
                    hashCode = (hashCode * 59) + this.LastResultUpdate.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.ProjectType.GetHashCode();
                hashCode = (hashCode * 59) + this.Status.GetHashCode();
                if (this.SearchDetails != null)
                {
                    hashCode = (hashCode * 59) + this.SearchDetails.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
