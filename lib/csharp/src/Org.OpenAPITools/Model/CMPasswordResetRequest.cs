/*
 * SimSage REST API
 *
 * SimSage REST API
 *
 * The version of the OpenAPI document: 7.14.12
 * Contact: info@simsage.co.uk
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// the password request object
    /// </summary>
    [DataContract(Name = "CMPasswordResetRequest")]
    public partial class CMPasswordResetRequest : IEquatable<CMPasswordResetRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CMPasswordResetRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CMPasswordResetRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CMPasswordResetRequest" /> class.
        /// </summary>
        /// <param name="email">email address of the user wishing to reset their password. (required).</param>
        /// <param name="resetUrl">the callback url for the password. (required).</param>
        public CMPasswordResetRequest(string email = default(string), string resetUrl = default(string))
        {
            // to ensure "email" is required (not null)
            if (email == null)
            {
                throw new ArgumentNullException("email is a required property for CMPasswordResetRequest and cannot be null");
            }
            this.Email = email;
            // to ensure "resetUrl" is required (not null)
            if (resetUrl == null)
            {
                throw new ArgumentNullException("resetUrl is a required property for CMPasswordResetRequest and cannot be null");
            }
            this.ResetUrl = resetUrl;
        }

        /// <summary>
        /// email address of the user wishing to reset their password.
        /// </summary>
        /// <value>email address of the user wishing to reset their password.</value>
        /// <example>example@simsage.co.uk</example>
        [DataMember(Name = "email", IsRequired = true, EmitDefaultValue = true)]
        public string Email { get; set; }

        /// <summary>
        /// the callback url for the password.
        /// </summary>
        /// <value>the callback url for the password.</value>
        /// <example>https://your.simsage.ai/admin/reset-password</example>
        [DataMember(Name = "resetUrl", IsRequired = true, EmitDefaultValue = true)]
        public string ResetUrl { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CMPasswordResetRequest {\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  ResetUrl: ").Append(ResetUrl).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CMPasswordResetRequest);
        }

        /// <summary>
        /// Returns true if CMPasswordResetRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of CMPasswordResetRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CMPasswordResetRequest input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.ResetUrl == input.ResetUrl ||
                    (this.ResetUrl != null &&
                    this.ResetUrl.Equals(input.ResetUrl))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Email != null)
                {
                    hashCode = (hashCode * 59) + this.Email.GetHashCode();
                }
                if (this.ResetUrl != null)
                {
                    hashCode = (hashCode * 59) + this.ResetUrl.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
