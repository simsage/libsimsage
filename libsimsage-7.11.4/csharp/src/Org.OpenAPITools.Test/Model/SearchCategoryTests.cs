/*
 * SimSage REST API
 *
 * SimSage REST API
 *
 * The version of the OpenAPI document: 7.11.4
 * Contact: info@simsage.co.uk
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing SearchCategory
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SearchCategoryTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SearchCategory
        //private SearchCategory instance;

        public SearchCategoryTests()
        {
            // TODO uncomment below to create an instance of SearchCategory
            //instance = new SearchCategory();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SearchCategory
        /// </summary>
        [Fact]
        public void SearchCategoryInstanceTest()
        {
            // TODO uncomment below to test "IsType" SearchCategory
            //Assert.IsType<SearchCategory>(instance);
        }

        /// <summary>
        /// Test the property 'ScType'
        /// </summary>
        [Fact]
        public void ScTypeTest()
        {
            // TODO unit test for the property 'ScType'
        }

        /// <summary>
        /// Test the property 'CategoryType'
        /// </summary>
        [Fact]
        public void CategoryTypeTest()
        {
            // TODO unit test for the property 'CategoryType'
        }

        /// <summary>
        /// Test the property 'Order'
        /// </summary>
        [Fact]
        public void OrderTest()
        {
            // TODO unit test for the property 'Order'
        }

        /// <summary>
        /// Test the property 'SortDefault'
        /// </summary>
        [Fact]
        public void SortDefaultTest()
        {
            // TODO unit test for the property 'SortDefault'
        }

        /// <summary>
        /// Test the property 'SortAscText'
        /// </summary>
        [Fact]
        public void SortAscTextTest()
        {
            // TODO unit test for the property 'SortAscText'
        }

        /// <summary>
        /// Test the property 'SortDescText'
        /// </summary>
        [Fact]
        public void SortDescTextTest()
        {
            // TODO unit test for the property 'SortDescText'
        }

        /// <summary>
        /// Test the property 'Metadata'
        /// </summary>
        [Fact]
        public void MetadataTest()
        {
            // TODO unit test for the property 'Metadata'
        }

        /// <summary>
        /// Test the property 'DisplayName'
        /// </summary>
        [Fact]
        public void DisplayNameTest()
        {
            // TODO unit test for the property 'DisplayName'
        }

        /// <summary>
        /// Test the property 'Sort'
        /// </summary>
        [Fact]
        public void SortTest()
        {
            // TODO unit test for the property 'Sort'
        }

        /// <summary>
        /// Test the property 'MinValue'
        /// </summary>
        [Fact]
        public void MinValueTest()
        {
            // TODO unit test for the property 'MinValue'
        }

        /// <summary>
        /// Test the property 'MaxValue'
        /// </summary>
        [Fact]
        public void MaxValueTest()
        {
            // TODO unit test for the property 'MaxValue'
        }

        /// <summary>
        /// Test the property 'Items'
        /// </summary>
        [Fact]
        public void ItemsTest()
        {
            // TODO unit test for the property 'Items'
        }
    }
}
